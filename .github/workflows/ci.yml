name: 🚀 Continuous Integration

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  JAVA_VERSION: "21"
  GO_VERSION: "1.23"
  TERRAFORM_VERSION: '1.9.8'

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      functions: ${{ steps.changes.outputs.functions }}
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          fetch-depth: 0

      - name: Detect changed functions
        id: changes
        run: |
          # Get list of all function directories (Maven modules ending with -service)
          FUNCTIONS=$(find . -maxdepth 1 -name "*-service" -type d -exec basename {} \; | jq -R -s -c 'split("\n")[:-1]')
          echo "functions=$FUNCTIONS" >> $GITHUB_OUTPUT
          echo "Detected functions: $FUNCTIONS"

  build:
    needs: detect-changes
    runs-on: ubuntu-latest
    strategy:
      matrix:
        function: ${{ fromJson(needs.detect-changes.outputs.functions) }}

    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Set up JDK
        uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9 # v4.2.1
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'corretto'
          cache: maven

      - name: Run tests
        working-directory: ${{ matrix.function }}
        run: |
          mvn test

      # Coverage reports removed to streamline CI pipeline
      # - name: Upload coverage reports
      #   uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4.3.3
      #   with:
      #     name: coverage-report-${{ matrix.function }}
      #     path: "**/target/site/jacoco/"
      #     retention-days: 30

      - name: Build JAR package
        working-directory: ${{ matrix.function }}
        run: |
          mvn clean package -DskipTests

      - name: Set up GraalVM
        uses: graalvm/setup-graalvm@2f25c0caae5b220866f732832d5e3e29ff493338 # v1.2.3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          native-image-job-reports: 'true'

      - name: Build native image
        working-directory: ${{ matrix.function }}
        run: |
          chmod +x ../build-graalvm-native.sh
          ../build-graalvm-native.sh

      - name: Upload native build artifacts
        uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4.3.3
        with:
          name: native-lambda-packages
          path: "**/*-native.zip"
          retention-days: 30

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Set up JDK
        uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9 # v4.2.1
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'corretto'
          cache: maven

      # Checkstyle removed as requested to streamline CI/CD pipeline
      # - name: Run checkstyle
      #   run: mvn checkstyle:check



  # 🏗️ Infrastructure Validation
  infrastructure:
    name: 🏗️ Infrastructure Validation
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: 🏗️ Setup Terraform
        uses: hashicorp/setup-terraform@651471c36a6092792c552e8b1bef71e592b462d8 # v3.1.1
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: 🔧 Terraform Init
        working-directory: terraform
        run: terraform init -backend=false

      - name: ✅ Terraform Validate
        working-directory: terraform
        run: terraform validate

      - name: 🎨 Terraform Format Check
        working-directory: terraform
        run: terraform fmt -check -recursive




  # 🧪 Terratest Infrastructure Testing
  terratest:
    name: 🧪 Terratest Infrastructure Tests
    runs-on: ubuntu-latest
    needs: [build, infrastructure]
    if: github.event_name == 'pull_request'
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: 🏗️ Setup Go
        uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: 📥 Download Native Artifacts
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: native-lambda-packages
          path: ./

      - name: 🧪 Run Terratest
        working-directory: tests
        run: |
          go mod tidy
          go test -v -timeout 30m
        env:
          AWS_DEFAULT_REGION: us-east-1

  # 📊 CI Summary Job
  ci-summary:
    name: 📊 CI Summary
    runs-on: ubuntu-latest
    needs: [build, lint, infrastructure]
    if: always()
    steps:
      - name: 📋 Generate CI Summary
        run: |
          echo "## 🚀 CI Pipeline Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Job | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-----|---------|" >> $GITHUB_STEP_SUMMARY
          echo "| Build & Test | ${{ needs.build.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Code Quality (Lint) | ${{ needs.lint.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Infrastructure | ${{ needs.infrastructure.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ needs.build.result }}" == "success" && "${{ needs.lint.result }}" == "success" && "${{ needs.infrastructure.result }}" == "success" ]]; then
            echo "🎉 **All checks passed!** Ready for deployment." >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️ **Some checks failed.** Please review the failed jobs above." >> $GITHUB_STEP_SUMMARY
          fi