openapi: 3.0.3
info:
  title: Java Lambda Template API
  description: |
    A production-ready Core API Service template following the Serverless Acceleration Platform blueprint.

    This API demonstrates:
    - API-First design with OpenAPI as source of truth
    - Well-Architected patterns with enterprise Java observability
    - Test-First development with JUnit 5 and MockitoCore
    - High-performance ARM64 deployment with GraalVM optimizations
  version: 1.0.0
  contact:
    name: Platform Engineering
    email: platform@company.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api-dev.company.com/v1
    description: Development environment
  - url: https://api-staging.company.com/v1
    description: Staging environment
  - url: https://api.company.com/v1
    description: Production environment

tags:
  - name: Health
    description: Service health and dependency monitoring
  - name: Hello
    description: Hello world service with Java enterprise patterns
  - name: Users
    description: User management with robust validation and persistence

paths:
  /health:
    get:
      tags: [Health]
      summary: Health check endpoint
      description: Comprehensive health check with dependency validation
      operationId: getHealth
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
        '503':
          description: Service is unhealthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /hello:
    get:
      tags: [Hello]
      summary: Hello world endpoint
      description: Enterprise-grade greeting service with comprehensive validation and observability
      operationId: getHello
      parameters:
        - name: name
          in: query
          description: Name to include in greeting
          required: false
          schema:
            type: string
            pattern: '^[a-zA-Z\s]{1,50}$'
            example: "Java Developer"
        - name: locale
          in: query
          description: Locale for localized responses
          required: false
          schema:
            type: string
            enum: [en, es, fr, de, ja]
            default: en
        - name: includeMetrics
          in: query
          description: Include performance metrics in response
          required: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Successful greeting
          headers:
            X-Request-ID:
              description: Unique request identifier for tracing
              schema:
                type: string
                format: uuid
            X-Trace-ID:
              description: AWS X-Ray trace identifier
              schema:
                type: string
            X-Execution-Time:
              description: Function execution time in milliseconds
              schema:
                type: number
            X-Memory-Used:
              description: Memory used in MB
              schema:
                type: number
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelloResponse'
        '400':
          description: Bad request - validation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /users:
    get:
      tags: [Users]
      summary: List users
      description: Retrieve users with enterprise-grade pagination and filtering
      operationId: getUsers
      parameters:
        - name: limit
          in: query
          description: Maximum number of users to return
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 25
        - name: offset
          in: query
          description: Number of users to skip for pagination
          required: false
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: sort
          in: query
          description: Sort field and direction
          required: false
          schema:
            type: string
            enum: [created_asc, created_desc, name_asc, name_desc, email_asc, email_desc]
            default: created_desc
        - name: filter
          in: query
          description: Filter users by status
          required: false
          schema:
            type: string
            enum: [active, inactive, suspended, all]
            default: all
        - name: search
          in: query
          description: Search users by name or email
          required: false
          schema:
            type: string
            maxLength: 100
      responses:
        '200':
          description: Successful user list retrieval
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersResponse'
        '400':
          description: Bad request - invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    HealthResponse:
      type: object
      required:
        - status
        - timestamp
        - version
        - service
        - runtime
        - uptime
      properties:
        status:
          type: string
          enum: [healthy, degraded, unhealthy]
          example: healthy
        timestamp:
          type: string
          format: date-time
          example: "2024-01-15T10:30:00Z"
        version:
          type: string
          example: "1.0.0"
        service:
          type: string
          example: "java-lambda-template"
        runtime:
          type: object
          required:
            - version
            - vendor
            - architecture
            - maxMemory
          properties:
            version:
              type: string
              example: "17.0.8"
            vendor:
              type: string
              example: "Amazon Corretto"
            architecture:
              type: string
              example: "aarch64"
            maxMemory:
              type: number
              example: 536870912
        requestId:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174000"
        environment:
          type: string
          example: "dev"
        uptime:
          type: number
          description: Service uptime in milliseconds
          example: 3600000
        dependencies:
          type: object
          properties:
            dynamodb:
              type: object
              properties:
                status:
                  type: string
                  enum: [healthy, unhealthy]
                responseTime:
                  type: number
                  description: Response time in milliseconds
            s3:
              type: object
              properties:
                status:
                  type: string
                  enum: [healthy, unhealthy]
                responseTime:
                  type: number

    HelloResponse:
      type: object
      required:
        - message
        - timestamp
        - requestId
        - version
      properties:
        message:
          type: string
          example: "Hello from Java Lambda with enterprise observability!"
        path:
          type: string
          example: "/hello"
        timestamp:
          type: string
          format: date-time
          example: "2024-01-15T10:30:00Z"
        requestId:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174000"
        version:
          type: string
          example: "1.0.0"
        environment:
          type: string
          example: "dev"
        locale:
          type: string
          example: "en"
        performance:
          type: object
          description: Performance metrics (when requested)
          properties:
            executionTimeMs:
              type: number
              example: 125.7
            memoryUsedMB:
              type: number
              example: 128.5
            memoryMaxMB:
              type: number
              example: 512.0
            coldStart:
              type: boolean
              example: false
            gcTimeMs:
              type: number
              example: 5.2
        runtime:
          type: object
          properties:
            javaVersion:
              type: string
              example: "17.0.8"
            vendor:
              type: string
              example: "Amazon Corretto"
            architecture:
              type: string
              example: "aarch64"

    UsersResponse:
      type: object
      required:
        - users
        - pagination
        - metadata
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/User'
        pagination:
          $ref: '#/components/schemas/Pagination'
        metadata:
          type: object
          properties:
            total:
              type: integer
              example: 2500
            filtered:
              type: integer
              example: 150
            executionTimeMs:
              type: number
              example: 45.3
            sortBy:
              type: string
              example: "created_desc"
            filter:
              type: string
              example: "active"

    User:
      type: object
      required:
        - id
        - email
        - status
        - createdAt
      properties:
        id:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174000"
        email:
          type: string
          format: email
          example: "java.developer@company.com"
        name:
          type: string
          example: "Java Enterprise Developer"
        firstName:
          type: string
          example: "Java"
        lastName:
          type: string
          example: "Developer"
        status:
          type: string
          enum: [active, inactive, suspended, pending, locked]
          example: active
        createdAt:
          type: string
          format: date-time
          example: "2024-01-15T10:30:00Z"
        updatedAt:
          type: string
          format: date-time
          example: "2024-01-15T10:30:00Z"
        lastLoginAt:
          type: string
          format: date-time
          nullable: true
          example: "2024-01-15T09:15:00Z"
        profile:
          type: object
          properties:
            department:
              type: string
              example: "Engineering"
            role:
              type: string
              example: "Senior Developer"
            preferences:
              type: object
              properties:
                theme:
                  type: string
                  enum: [light, dark, auto]
                language:
                  type: string
                  enum: [en, es, fr, de, ja]
                timezone:
                  type: string
                  example: "America/New_York"

    Pagination:
      type: object
      required:
        - limit
        - offset
        - hasMore
      properties:
        limit:
          type: integer
          example: 25
        offset:
          type: integer
          example: 50
        hasMore:
          type: boolean
          example: true
        totalPages:
          type: integer
          nullable: true
          example: 100
        currentPage:
          type: integer
          example: 3

    ErrorResponse:
      type: object
      required:
        - error
        - message
        - timestamp
        - requestId
        - path
      properties:
        error:
          type: string
          example: "InternalServerError"
        message:
          type: string
          example: "An unexpected error occurred"
        timestamp:
          type: string
          format: date-time
          example: "2024-01-15T10:30:00Z"
        requestId:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174000"
        path:
          type: string
          example: "/hello"
        details:
          type: object
          description: Additional error context
        trace:
          type: object
          properties:
            className:
              type: string
              example: "com.example.hello.HelloHandler"
            methodName:
              type: string
              example: "handleRequest"
            lineNumber:
              type: integer
              example: 42

    ValidationErrorResponse:
      type: object
      required:
        - error
        - message
        - timestamp
        - requestId
        - path
        - validationErrors
      properties:
        error:
          type: string
          example: "ValidationError"
        message:
          type: string
          example: "Request validation failed"
        timestamp:
          type: string
          format: date-time
          example: "2024-01-15T10:30:00Z"
        requestId:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174000"
        path:
          type: string
          example: "/hello"
        validationErrors:
          type: array
          items:
            type: object
            properties:
              field:
                type: string
                example: "name"
              message:
                type: string
                example: "Name must contain only letters and spaces"
              code:
                type: string
                example: "INVALID_FORMAT"
              value:
                type: string
                nullable: true
                example: "invalid123"