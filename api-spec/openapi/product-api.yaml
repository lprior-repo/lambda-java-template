openapi: 3.0.3
info:
  title: Product Service API
  description: REST API for managing products in the Lambda Java Template
  version: 1.0.0
  contact:
    name: Product Service Team
servers:
  - url: https://api.example.com/prod
    description: Production server
  - url: https://api.example.com/dev
    description: Development server
paths:
  /health:
    get:
      summary: Health check endpoint
      description: Returns the health status of the product service
      operationId: getHealth
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
              example:
                status: "healthy"
                service: "product-service"
                timestamp: "2024-01-15T10:30:00Z"
  
  /products:
    get:
      summary: List all products
      description: Retrieve a list of all products
      operationId: listProducts
      responses:
        '200':
          description: List of products
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductListResponse'
              example:
                products: []
    
    post:
      summary: Create a new product
      description: Create a new product with the provided details
      operationId: createProduct
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductRequest'
            example:
              name: "Wireless Headphones"
              price: 199.99
      responses:
        '201':
          description: Product created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
              example:
                id: "123e4567-e89b-12d3-a456-426614174000"
                name: "Wireless Headphones"
                price: 199.99
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Product name cannot be null or empty"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Internal server error"

  /products/{productId}:
    get:
      summary: Get a product by ID
      description: Retrieve a specific product by its unique identifier
      operationId: getProduct
      parameters:
        - name: productId
          in: path
          required: true
          description: Unique identifier of the product
          schema:
            type: string
            format: uuid
          example: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        '200':
          description: Product details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
              example:
                id: "123e4567-e89b-12d3-a456-426614174000"
                name: "Wireless Headphones"
                price: 199.99
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Product not found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Internal server error"

    put:
      summary: Update a product
      description: Update an existing product with new details
      operationId: updateProduct
      parameters:
        - name: productId
          in: path
          required: true
          description: Unique identifier of the product
          schema:
            type: string
            format: uuid
          example: "123e4567-e89b-12d3-a456-426614174000"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProductRequest'
            example:
              name: "Premium Wireless Headphones"
              price: 299.99
      responses:
        '200':
          description: Product updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
              example:
                id: "123e4567-e89b-12d3-a456-426614174000"
                name: "Premium Wireless Headphones"
                price: 299.99
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Product price must be positive"
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Product not found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Internal server error"

    delete:
      summary: Delete a product
      description: Remove a product from the system
      operationId: deleteProduct
      parameters:
        - name: productId
          in: path
          required: true
          description: Unique identifier of the product
          schema:
            type: string
            format: uuid
          example: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        '204':
          description: Product deleted successfully
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Product not found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Internal server error"

components:
  schemas:
    HealthResponse:
      type: object
      required:
        - status
        - service
      properties:
        status:
          type: string
          enum: [healthy, unhealthy]
          description: Health status of the service
        service:
          type: string
          description: Name of the service
        timestamp:
          type: string
          format: date-time
          description: Timestamp of the health check

    ProductResponse:
      type: object
      required:
        - id
        - name
        - price
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier of the product
        name:
          type: string
          minLength: 1
          maxLength: 100
          description: Name of the product
        price:
          type: number
          format: decimal
          minimum: 0
          exclusiveMinimum: true
          description: Price of the product

    CreateProductRequest:
      type: object
      required:
        - name
        - price
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
          description: Name of the product
        price:
          type: number
          format: decimal
          minimum: 0
          exclusiveMinimum: true
          description: Price of the product

    UpdateProductRequest:
      type: object
      required:
        - name
        - price
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
          description: Updated name of the product
        price:
          type: number
          format: decimal
          minimum: 0
          exclusiveMinimum: true
          description: Updated price of the product

    ProductListResponse:
      type: object
      required:
        - products
      properties:
        products:
          type: array
          items:
            $ref: '#/components/schemas/ProductResponse'
          description: List of products

    ErrorResponse:
      type: object
      required:
        - error
      properties:
        error:
          type: string
          description: Error message describing what went wrong

  responses:
    BadRequest:
      description: Invalid request data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    
    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'